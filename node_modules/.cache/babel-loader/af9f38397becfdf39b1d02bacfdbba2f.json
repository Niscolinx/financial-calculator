{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/roqq/roqquappchat/src/containers/App.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Home from './Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  let AuthGuard = /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n\n  if (props.auth) {\n    AuthGuard = /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rootApp\",\n    children: AuthGuard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    siteOwner: state.auth.siteOwner,\n    auth: state.auth.tokenId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCheckState: (tokenId, userId) => dispatch(actions.authSuccess(tokenId, userId))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/niscolinx/projects/roqq/roqquappchat/src/containers/App.js"],"names":["React","useEffect","useRef","Switch","Route","Redirect","withRouter","connect","Home","App","props","AuthGuard","auth","mapStateToProps","state","siteOwner","tokenId","mapDispatchToProps","dispatch","onCheckState","userId","actions","authSuccess"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SACIC,MADJ,EAEIC,KAFJ,EAGIC,QAHJ,EAIIC,UAJJ,QAKO,kBALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAGhB,MAAIC,SAAS,gBACT,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAYA,MAAIE,KAAK,CAACE,IAAV,EAAgB;AACZD,IAAAA,SAAS,gBACL,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cAA0BG;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAjCQF,G;;AAmCT,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACF,IAAN,CAAWG,SADnB;AAEHH,IAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWI;AAFd,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,YAAY,EAAE,CAACH,OAAD,EAAUI,MAAV,KACVF,QAAQ,CAACG,OAAO,CAACC,WAAR,CAAoBN,OAApB,EAA6BI,MAA7B,CAAD;AAFT,GAAP;AAIH,CALD;;AAOA,eAAed,UAAU,CAACC,OAAO,CAACM,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CR,GAA7C,CAAD,CAAzB","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport {\n    Switch,\n    Route,\n    Redirect,\n    withRouter,\n} from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Home from './Home'\n\n\nfunction App(props) {\n   \n\n    let AuthGuard = (\n        <Switch>\n            <Route path='/' exact component={Home} />\n            <Redirect to='/' />\n            {/* <Route\n                path='/Auth/login'\n                component={LoginPage}\n            />\n\n           */}\n        </Switch>\n    )\n    if (props.auth) {\n        AuthGuard = (\n            <Switch>\n                <Route path='/' exact component={Home} />\n                {/* <Route\n                    path='/Auth/login'\n                    render={(props) => <LoginPage {...props} />}\n                />\n                <Route\n                    path='/admin'\n                    render={(props) => <Dashboard {...props} />}\n                />{' '} */}\n                <Redirect to='/' />\n            </Switch>\n        )\n    }\n\n    return <div className='rootApp'>{AuthGuard}</div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        siteOwner: state.auth.siteOwner,\n        auth: state.auth.tokenId,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onCheckState: (tokenId, userId) =>\n            dispatch(actions.authSuccess(tokenId, userId)),\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n"]},"metadata":{},"sourceType":"module"}