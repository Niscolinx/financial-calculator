{"ast":null,"code":"var _jsxFileName = \"/home/niscolinx/projects/roqq/coinb/src/components/PhraseItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhraseItem = ({\n  phraseContents,\n  index,\n  deletePhrase,\n  loading\n}) => {\n  _s();\n\n  console.log(phraseContents._id);\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleCopy = () => {\n    setIsCopied(true);\n  };\n\n  useEffect(() => {\n    if (isCopied) {\n      setTimeout(() => {\n        setIsCopied(false);\n      }, 4000);\n    }\n  }, [isCopied]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid p-4 border rounded-md bg-white text-black font-semibold shadow-inner gap-y-2 justify-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), isCopied && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \" bg-green-800 px-2 py-1 text-white\",\n      children: \"Copied!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t-2 border-b-2 border-gray-300 grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: phraseContents.phrase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \" bg-red-700 text-white justify-self-end py-2 px-6 font-semibold rounded-md outline-none sm:mb-5 my-2 mr-4\",\n          onClick: () => deletePhrase(phraseContents._id),\n          children: loading ? 'Loading...' : 'delete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: phraseContents.phrase,\n          onCopy: () => handleCopy(),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-[#3375BB] text-white justify-self-end py-2 px-6 font-semibold rounded-md outline-none sm:mb-5 my-2\",\n            \"data-clipboard-target\": \"#linkRef\",\n            children: \"Copy Phrase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: phraseContents.createdAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhraseItem, \"njFpxFO1DeOSmWdCiFrlH4MK9oc=\");\n\n_c = PhraseItem;\nexport default PhraseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhraseItem\");","map":{"version":3,"sources":["/home/niscolinx/projects/roqq/coinb/src/components/PhraseItem.jsx"],"names":["React","useState","useEffect","CopyToClipboard","PhraseItem","phraseContents","index","deletePhrase","loading","console","log","_id","isCopied","setIsCopied","handleCopy","setTimeout","phrase","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,yBAAhC;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,YAAzB;AAAuCC,EAAAA;AAAvC,CAAD,KAAsD;AAAA;;AACrEC,EAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACM,GAA3B;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACrBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,QAAJ,EAAc;AACVG,MAAAA,UAAU,CAAC,MAAM;AACbF,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GANQ,EAMN,CAACD,QAAD,CANM,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,wGAAf;AAAA,4BACI;AAAA,gBAAIN,KAAK,GAAG;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKM,QAAQ,iBACL;AAAG,MAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR,eAKI;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,kBAAqBP,cAAc,CAACW;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,2GADd;AAEI,UAAA,OAAO,EAAE,MAAMT,YAAY,CAACF,cAAc,CAACM,GAAhB,CAF/B;AAAA,oBAIKH,OAAO,GAAG,YAAH,GAAkB;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,eAAD;AACI,UAAA,IAAI,EAAEH,cAAc,CAACW,MADzB;AAEI,UAAA,MAAM,EAAE,MAAMF,UAAU,EAF5B;AAAA,iCAII;AACI,YAAA,SAAS,EAAC,uGADd;AAEI,qCAAsB,UAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eA6BI;AAAA,gBAAIT,cAAc,CAACY;AAAnB;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAlDD;;GAAMb,U;;KAAAA,U;AAoDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst PhraseItem = ({ phraseContents, index, deletePhrase, loading }) => {\n    console.log(phraseContents._id)\n\n    const [isCopied, setIsCopied] = useState(false)\n\n    const handleCopy = () => {\n        setIsCopied(true)\n    }\n\n    useEffect(() => {\n        if (isCopied) {\n            setTimeout(() => {\n                setIsCopied(false)\n            }, 4000)\n        }\n    }, [isCopied])\n\n    return (\n        <div className='grid p-4 border rounded-md bg-white text-black font-semibold shadow-inner gap-y-2 justify-items-center'>\n            <p>{index + 1}</p>\n            {isCopied && (\n                <p className=' bg-green-800 px-2 py-1 text-white'>Copied!</p>\n            )}\n            <div className='border-t-2 border-b-2 border-gray-300 grid'>\n                <p className='my-1'>{phraseContents.phrase}</p>\n\n                <div className='flex justify-between'>\n                    <button\n                        className=' bg-red-700 text-white justify-self-end py-2 px-6 font-semibold rounded-md outline-none sm:mb-5 my-2 mr-4'\n                        onClick={() => deletePhrase(phraseContents._id)}\n                    >\n                        {loading ? 'Loading...' : 'delete'}\n                    </button>\n\n                    <CopyToClipboard\n                        text={phraseContents.phrase}\n                        onCopy={() => handleCopy()}\n                    >\n                        <button\n                            className='bg-[#3375BB] text-white justify-self-end py-2 px-6 font-semibold rounded-md outline-none sm:mb-5 my-2'\n                            data-clipboard-target='#linkRef'\n                        >\n                            Copy Phrase\n                        </button>\n                    </CopyToClipboard>\n                </div>\n            </div>\n            <p>{phraseContents.createdAt}</p>\n        </div>\n    )\n}\n\nexport default PhraseItem\n"]},"metadata":{},"sourceType":"module"}